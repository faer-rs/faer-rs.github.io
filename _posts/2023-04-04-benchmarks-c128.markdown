---
layout: post
title:  "Benchmarks (c32)"
date:   2023-04-03 00:00:13 +0100
permalink: /bench-c32/
---

The benchmarks were run on an `11th Gen Intel(R) Core(TM) i5-11400 @ 2.60GHz` with 12 threads.  
- `eigen` is compiled with `-march=native -O3 -fopenmp`

All computations are done on column major matrices containing `Complex<f128>`
values, using the `num_complex` and `qd` crates.

## Matrix multiplication

Multiplication of two square matrices of dimension `n`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32    108.8µs    103.7µs          -          -      467µs
   64    782.3µs    408.3µs          -          -    961.5µs
   96      2.6ms    983.3µs          -          -      2.1ms
  128      5.9ms        2ms          -          -       14ms
  192     18.9ms      6.1ms          -          -     18.7ms
  256       44ms     14.7ms          -          -     59.6ms
  384    145.9ms     41.4ms          -          -    154.1ms
  512    347.5ms    100.8ms          -          -    498.3ms
  640    669.8ms    192.8ms          -          -    795.9ms
  768      1.17s    329.4ms          -          -      1.22s
  896      1.86s    520.3ms          -          -      2.36s
 1024      2.86s    790.2ms          -          -      3.16s
```

## Triangular solve

Solving `AX = B` in place where `A` and `B` are two square matrices of dimension `n`, and `A` is a triangular matrix.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32    169.7µs    485.7µs          -          -    323.1µs
   64    881.6µs      1.5ms          -          -      2.6ms
   96      2.6ms      1.8ms          -          -      8.6ms
  128      5.1ms      3.3ms          -          -     20.4ms
  192     15.3ms      6.4ms          -          -     69.4ms
  256     32.1ms     12.7ms          -          -    163.7ms
  384     98.5ms     33.3ms          -          -    479.2ms
  512    216.3ms     72.7ms          -          -      1.14s
  640    412.8ms    144.1ms          -          -       2.1s
  768    687.8ms    215.3ms          -          -      3.63s
  896      1.07s      357ms          -          -      5.76s
 1024      1.59s    512.1ms          -          -      8.34s
```

## Triangular inverse

Computing `A^-1` where `A` is a square triangular matrix with dimension `n`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32    162.2µs      295µs          -          -    320.2µs
   64    624.1µs    912.5µs          -          -      2.6ms
   96      1.7ms        2ms          -          -      8.6ms
  128      2.9ms      3.1ms          -          -     20.5ms
  192      8.3ms        6ms          -          -       69ms
  256     15.5ms      8.8ms          -          -      164ms
  384     46.8ms     19.8ms          -          -    470.6ms
  512     93.6ms     35.5ms          -          -      1.12s
  640    185.5ms     65.6ms          -          -      2.06s
  768    289.7ms     93.5ms          -          -      3.55s
  896    434.6ms    142.9ms          -          -      5.65s
 1024    609.6ms    193.6ms          -          -      8.16s
```

## Cholesky decomposition

Factorizing a square matrix with dimension `n` as `L×L.T`, where `L` is lower triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32       90µs      255µs          -          -    131.2µs
   64    468.5µs      1.2ms          -          -    908.6µs
   96      1.4ms      2.8ms          -          -      2.9ms
  128      2.4ms      4.7ms          -          -      6.3ms
  192      7.6ms      9.9ms          -          -     20.8ms
  256     13.8ms     14.1ms          -          -     46.7ms
  384     39.9ms     30.9ms          -          -    153.4ms
  512     89.6ms     47.9ms          -          -    358.3ms
  640    162.9ms     87.6ms          -          -    694.1ms
  768    277.2ms    117.8ms          -          -      1.19s
  896    426.1ms    172.6ms          -          -      1.89s
 1024    620.4ms    245.7ms          -          -      2.81s
```

## LU decomposition with partial pivoting

Factorizing a square matrix with dimension `n` as `P×L×U`, where `P` is a permutation matrix, `L` is unit lower triangular and `U` is upper triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32    122.7µs    286.5µs          -          -    266.7µs
   64    666.5µs      1.3ms          -          -      1.8ms
   96      1.9ms        3ms          -          -      5.6ms
  128      3.8ms      5.5ms          -          -      8.3ms
  192     11.1ms     11.2ms          -          -     20.8ms
  256     23.2ms     20.7ms          -          -     48.9ms
  384     70.7ms     45.5ms          -          -    123.2ms
  512    154.2ms     90.5ms          -          -    271.7ms
  640    291.6ms    150.8ms          -          -      484ms
  768    483.1ms    222.9ms          -          -    724.2ms
  896    744.4ms      341ms          -          -      1.21s
 1024       1.1s    511.5ms          -          -       1.8s
```

## LU decomposition with full pivoting

Factorizing a square matrix with dimension `n` as `P×L×U×Q.T`, where `P` and `Q` are permutation matrices, `L` is unit lower triangular and `U` is upper triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32     61.3µs     61.3µs          -          -      777µs
   64    387.8µs    388.1µs          -          -      5.9ms
   96      1.2ms      1.2ms          -          -     19.5ms
  128      2.7ms      2.7ms          -          -     45.9ms
  192      8.7ms      8.7ms          -          -    153.3ms
  256     20.3ms     20.3ms          -          -    361.1ms
  384     66.1ms     59.9ms          -          -      1.21s
  512    155.6ms       83ms          -          -      2.87s
  640    308.5ms    121.4ms          -          -      5.59s
  768    549.3ms      221ms          -          -      9.68s
  896    876.9ms      401ms          -          -     15.37s
 1024      1.34s    689.8ms          -          -     22.98s
```

## QR decomposition with no pivoting

Factorizing a square matrix with dimension `n` as `QR`, where `Q` is unitary and `R` is upper triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32      335µs    334.9µs          -          -    380.7µs
   64      1.6ms      1.6ms          -          -      4.2ms
   96      4.1ms      4.1ms          -          -     12.1ms
  128      8.4ms      8.4ms          -          -     27.9ms
  192     25.3ms     25.3ms          -          -     86.1ms
  256     55.4ms     49.7ms          -          -    195.1ms
  384    173.6ms    131.1ms          -          -    620.1ms
  512    400.2ms    275.4ms          -          -      1.43s
  640    665.5ms    390.9ms          -          -      2.73s
  768      1.13s    627.3ms          -          -      4.65s
  896      1.76s    939.8ms          -          -      7.31s
 1024      2.62s      1.36s          -          -     10.82s
```

## QR decomposition with column pivoting

Factorizing a square matrix with dimension `n` as `QRP`, where `P` is a permutation matrix, `Q` is unitary and `R` is upper triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32    314.6µs    338.3µs          -          -      453µs
   64      1.4ms      1.4ms          -          -      3.2ms
   96      3.6ms      3.4ms          -          -     10.4ms
  128      7.3ms        7ms          -          -     24.1ms
  192     20.7ms       20ms          -          -     79.6ms
  256     44.9ms     33.3ms          -          -    186.6ms
  384    137.4ms     51.6ms          -          -    622.4ms
  512    311.9ms     85.3ms          -          -      1.47s
  640      604ms    143.2ms          -          -      2.86s
  768      1.03s    246.4ms          -          -      4.94s
  896      1.63s    479.1ms          -          -      7.86s
 1024      2.44s    736.4ms          -          -     11.62s
```

## Matrix inverse

Computing the inverse of a square matrix with dimension `n`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32    571.5µs    640.2µs          -          -    920.7µs
   64      2.6ms      2.5ms          -          -        7ms
   96      7.4ms      5.9ms          -          -       23ms
  128     13.1ms     10.2ms          -          -     49.5ms
  192     39.3ms     22.6ms          -          -      160ms
  256     76.1ms       39ms          -          -    377.5ms
  384    235.9ms     89.2ms          -          -      1.07s
  512    490.6ms    177.5ms          -          -      2.51s
  640    962.2ms    315.5ms          -          -      4.61s
  768      1.55s    542.6ms          -          -      7.84s
  896      2.36s      818ms          -          -     12.51s
 1024      3.41s      1.12s          -          -     18.13s
```

## Square matrix singular value decomposition

Computing the SVD of a square matrix with dimension `n`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32      2.8ms      3.9ms          -          -      4.6ms
   64     12.1ms     13.2ms          -          -     34.8ms
   96     30.3ms     28.3ms          -          -     98.8ms
  128     59.3ms     53.8ms          -          -    195.8ms
  192      159ms    113.1ms          -          -    540.5ms
  256    329.1ms      209ms          -          -      1.14s
  384      951ms    541.6ms          -          -      3.29s
  512      2.11s      1.13s          -          -       7.2s
  640      3.61s      1.71s          -          -     13.33s
  768      6.01s       2.7s          -          -     22.17s
  896      9.29s      4.02s          -          -     34.41s
 1024     13.76s      5.62s          -          -     51.41s
```

## Thin matrix singular value decomposition

Computing the SVD of a rectangular matrix with shape `(4096, n)`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32     82.7ms     79.1ms          -          -    283.1ms
   64      273ms    225.9ms          -          -      1.13s
   96    506.9ms    360.3ms          -          -      2.45s
  128    872.2ms    585.7ms          -          -      4.07s
  192      1.89s      1.15s          -          -      8.87s
  256      3.64s      2.19s          -          -     15.07s
  384      7.05s      3.69s          -          -     32.25s
  512     13.21s       7.1s          -          -     55.67s
  640     19.63s       9.8s          -          -     1:25.4
  768     29.34s     14.72s          -          -     2:01.3
  896     39.23s     18.45s          -          -     2:43.1
 1024     55.54s     27.32s          -          -     3:31.8
```

## Hermitian matrix eigenvalue decomposition

Computing the EVD of a hermitian matrix with shape `(n, n)`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32      1.1ms      1.8ms          -          -      1.9ms
   64      5.7ms      6.8ms          -          -     13.9ms
   96       15ms     14.7ms          -          -     44.8ms
  128     29.3ms     28.1ms          -          -      105ms
  192     80.2ms     66.1ms          -          -    341.3ms
  256    165.9ms    129.1ms          -          -      795ms
  384    482.2ms    301.8ms          -          -      2.63s
  512      1.06s    605.3ms          -          -      6.16s
  640      1.83s    898.9ms          -          -     11.98s
  768      3.03s      1.41s          -          -     20.72s
  896      4.67s      2.11s          -          -     32.77s
 1024      6.89s      2.91s          -          -     48.51s
```

## Non Hermitian matrix eigenvalue decomposition

Computing the EVD of a matrix with shape `(n, n)`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
   32      4.7ms        6ms          -          -       10ms
   64     31.1ms     33.3ms          -          -     73.1ms
   96    156.5ms    197.4ms          -          -    242.2ms
  128    311.6ms    375.2ms          -          -    565.2ms
  192      715ms    651.4ms          -          -      1.84s
  256      1.51s      1.28s          -          -      4.29s
  384       3.8s      2.98s          -          -     14.14s
  512      8.11s      6.15s          -          -     34.12s
  640     20.28s     16.57s          -          -       1:06
  768      32.3s     24.09s          -          -       1:55
  896     47.12s     33.61s          -          -     3:05.7
 1024     1:12.5     50.23s          -          -     4:43.5
```
