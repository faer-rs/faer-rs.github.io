---
layout: post
title:  "Benchmarks (c128)"
date:   2023-04-03 00:00:13 +0100
permalink: /bench-c128/
---

The benchmarks were run on an `11th Gen Intel(R) Core(TM) i5-11400 @ 2.60GHz` with 12 threads.  
- `eigen` is compiled with `-march=native -O3 -fopenmp`

All computations are done on column major matrices containing `Complex<f128>`
values, using the `num_complex` and `qd` crates.

## Matrix multiplication

Multiplication of two square matrices of dimension `n`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      1.1µs      1.1µs          -          -      949ns
    8        7µs     38.6µs          -          -      8.5µs
   16     20.8µs     51.8µs          -          -     61.2µs
   32    109.7µs    105.6µs          -          -    466.8µs
   64    734.4µs    401.6µs          -          -    961.2µs
   96      2.4ms      990µs          -          -        2ms
  128      5.4ms        2ms          -          -       14ms
  192     17.9ms      6.2ms          -          -     16.2ms
  256       42ms       15ms          -          -     59.3ms
  384      141ms     41.4ms          -          -    150.8ms
  512    339.4ms     97.1ms          -          -      497ms
  640    652.9ms    187.2ms          -          -      794ms
  768      1.15s    306.2ms          -          -       1.2s
  896      1.84s    504.7ms          -          -      2.36s
 1024       2.8s    763.9ms          -          -      3.16s
```

## Triangular solve

Solving `AX = B` in place where `A` and `B` are two square matrices of dimension `n`, and `A` is a triangular matrix.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      420ns      418ns          -          -      707ns
    8        4µs        4µs          -          -      5.2µs
   16     28.3µs     75.2µs          -          -     40.6µs
   32    172.8µs    485.6µs          -          -      321µs
   64    886.5µs      1.6ms          -          -      2.6ms
   96      2.6ms      1.9ms          -          -      8.6ms
  128      5.2ms      3.3ms          -          -     20.4ms
  192     15.4ms      6.4ms          -          -     68.9ms
  256     32.2ms     12.3ms          -          -    163.3ms
  384     99.3ms     33.5ms          -          -    470.4ms
  512    217.4ms     72.3ms          -          -      1.12s
  640    414.1ms    144.6ms          -          -      2.05s
  768    690.1ms    214.7ms          -          -      3.55s
  896      1.07s      352ms          -          -      5.65s
 1024      1.59s      511ms          -          -      8.15s
```

## Triangular inverse

Computing `A^-1` where `A` is a square triangular matrix with dimension `n`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      595ns      6.2µs          -          -      709ns
    8      3.3µs     12.1µs          -          -      5.2µs
   16     18.9µs       62µs          -          -     40.6µs
   32     89.3µs    182.6µs          -          -    320.4µs
   64    480.6µs    828.1µs          -          -      2.6ms
   96      1.5ms      1.8ms          -          -      8.6ms
  128      2.6ms        3ms          -          -     20.4ms
  192      7.9ms      5.9ms          -          -     69.2ms
  256     14.9ms      8.7ms          -          -    163.8ms
  384     45.8ms     18.6ms          -          -    470.5ms
  512     91.9ms     34.3ms          -          -      1.12s
  640    183.2ms     65.4ms          -          -      2.06s
  768    287.2ms     93.6ms          -          -      3.56s
  896    431.6ms    140.9ms          -          -      5.65s
 1024    609.4ms    205.1ms          -          -      8.15s
```

## Cholesky decomposition

Factorizing a square matrix with dimension `n` as `L×L.T`, where `L` is lower triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      440ns      440ns          -          -      874ns
    8      1.8µs      1.8µs          -          -      3.6µs
   16      8.3µs      8.3µs          -          -       18µs
   32       74µs    161.3µs          -          -    130.2µs
   64    446.6µs      1.1ms          -          -    909.2µs
   96      1.3ms      2.5ms          -          -      2.9ms
  128      2.4ms      4.4ms          -          -      6.3ms
  192      7.5ms      9.3ms          -          -     20.7ms
  256     13.8ms     13.4ms          -          -     46.7ms
  384     39.9ms     29.6ms          -          -    153.3ms
  512       90ms     47.1ms          -          -    358.1ms
  640    163.3ms     85.7ms          -          -      694ms
  768    277.9ms    114.6ms          -          -      1.19s
  896    427.5ms    169.2ms          -          -      1.88s
 1024    622.1ms    232.4ms          -          -      2.81s
```

## LU decomposition with partial pivoting

Factorizing a square matrix with dimension `n` as `P×L×U`, where `P` is a permutation matrix, `L` is unit lower triangular and `U` is upper triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      578ns      546ns          -          -      1.8µs
    8      1.7µs      1.7µs          -          -        8µs
   16      7.1µs      7.1µs          -          -     43.3µs
   32     76.7µs    163.7µs          -          -    265.5µs
   64    534.7µs        1ms          -          -      1.8ms
   96      1.6ms      2.6ms          -          -      5.6ms
  128      3.3ms      4.7ms          -          -      8.4ms
  192     10.2ms      9.7ms          -          -     20.7ms
  256     21.5ms     18.2ms          -          -     48.4ms
  384     66.9ms     40.6ms          -          -    122.7ms
  512    146.9ms     81.7ms          -          -    271.3ms
  640    281.5ms    137.7ms          -          -    481.9ms
  768    468.3ms    204.8ms          -          -    718.4ms
  896    723.6ms    317.7ms          -          -      1.19s
 1024      1.06s    467.8ms          -          -      1.76s
```

## LU decomposition with full pivoting

Factorizing a square matrix with dimension `n` as `P×L×U×Q.T`, where `P` and `Q` are permutation matrices, `L` is unit lower triangular and `U` is upper triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      738ns      734ns          -          -      2.7µs
    8      2.4µs      2.4µs          -          -     15.7µs
   16       11µs       11µs          -          -    102.7µs
   32     60.4µs       61µs          -          -    774.1µs
   64      386µs    385.8µs          -          -      5.9ms
   96      1.2ms      1.2ms          -          -     19.5ms
  128      2.7ms      2.7ms          -          -     45.8ms
  192      8.7ms      8.7ms          -          -    152.9ms
  256     20.2ms     20.2ms          -          -    360.7ms
  384     65.9ms     59.8ms          -          -      1.21s
  512    154.6ms     82.8ms          -          -      2.86s
  640    307.2ms    120.8ms          -          -      5.58s
  768    546.5ms      220ms          -          -      9.65s
  896    876.7ms    398.4ms          -          -     15.34s
 1024      1.34s    666.6ms          -          -     22.93s
```

## QR decomposition with no pivoting

Factorizing a square matrix with dimension `n` as `QR`, where `Q` is unitary and `R` is upper triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      1.8µs      1.8µs          -          -      1.6µs
    8      7.1µs      7.1µs          -          -      8.2µs
   16       31µs       31µs          -          -     52.6µs
   32    145.7µs    145.6µs          -          -    380.7µs
   64      1.5ms      1.5ms          -          -      4.2ms
   96        4ms        4ms          -          -     12.1ms
  128      8.3ms      8.3ms          -          -       28ms
  192     24.9ms     24.9ms          -          -     86.2ms
  256     54.8ms     49.3ms          -          -    195.4ms
  384    172.9ms    130.4ms          -          -    621.2ms
  512    398.6ms    274.4ms          -          -      1.43s
  640    663.9ms    388.3ms          -          -      2.73s
  768      1.13s      624ms          -          -      4.65s
  896      1.76s    938.1ms          -          -      7.32s
 1024      2.61s      1.36s          -          -     10.85s
```

## QR decomposition with column pivoting

Factorizing a square matrix with dimension `n` as `QRP`, where `P` is a permutation matrix, `Q` is unitary and `R` is upper triangular.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      2.6µs      2.6µs          -          -      2.7µs
    8      9.2µs      9.3µs          -          -     12.6µs
   16     39.7µs     39.8µs          -          -       70µs
   32    190.2µs    189.9µs          -          -    450.7µs
   64      1.2ms      1.2ms          -          -      3.2ms
   96      3.2ms        3ms          -          -     10.4ms
  128      6.6ms      6.3ms          -          -     24.4ms
  192     19.2ms     18.4ms          -          -       80ms
  256       42ms     30.7ms          -          -      187ms
  384    130.8ms     48.4ms          -          -      622ms
  512    298.8ms     81.9ms          -          -      1.47s
  640    582.8ms    137.2ms          -          -      2.85s
  768         1s    247.1ms          -          -      4.93s
  896      1.59s      479ms          -          -      7.84s
 1024       2.4s    732.7ms          -          -     11.58s
```

## Matrix inverse

Computing the inverse of a square matrix with dimension `n`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      4.5µs     14.9µs          -          -      3.5µs
    8     18.4µs     61.1µs          -          -     19.2µs
   16     72.3µs    126.7µs          -          -    126.5µs
   32    384.3µs    431.1µs          -          -    917.6µs
   64      2.2ms      2.1ms          -          -      6.9ms
   96      6.7ms      5.3ms          -          -       23ms
  128     12.2ms      9.1ms          -          -     49.4ms
  192     37.8ms     20.9ms          -          -    159.2ms
  256     73.6ms     36.2ms          -          -    376.7ms
  384    231.4ms     85.3ms          -          -      1.07s
  512    482.3ms    166.3ms          -          -      2.51s
  640    952.3ms    314.4ms          -          -       4.6s
  768      1.54s    525.3ms          -          -      7.84s
  896      2.34s    795.4ms          -          -      12.5s
 1024      3.37s      1.11s          -          -     18.11s
```

## Square matrix singular value decomposition

Computing the SVD of a square matrix with dimension `n`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4     20.5µs     20.4µs          -          -     48.1µs
    8    120.5µs    151.5µs          -          -    465.9µs
   16    521.7µs      536µs          -          -    790.8µs
   32      2.2ms      2.1ms          -          -      4.5ms
   64     12.1ms     13.2ms          -          -       33ms
   96     30.3ms     28.5ms          -          -     97.3ms
  128     59.4ms     53.6ms          -          -    189.8ms
  192    159.1ms      113ms          -          -    540.2ms
  256    328.9ms    210.4ms          -          -      1.13s
  384    951.8ms    543.9ms          -          -      3.29s
  512      2.11s      1.15s          -          -      7.17s
  640      3.62s      1.69s          -          -     13.33s
  768      6.02s      2.74s          -          -     22.18s
  896       9.3s      4.03s          -          -     34.46s
 1024     13.76s      5.63s          -          -      51.4s
```

## Thin matrix singular value decomposition

Computing the SVD of a rectangular matrix with shape `(4096, n)`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4      4.4ms      5.8ms          -          -     12.5ms
    8     10.4ms     11.8ms          -          -     64.9ms
   16     27.1ms     29.3ms          -          -     73.6ms
   32     80.4ms       77ms          -          -    282.9ms
   64      270ms    227.2ms          -          -      1.13s
   96      501ms    357.3ms          -          -      2.44s
  128    862.1ms    580.6ms          -          -      4.08s
  192      1.87s      1.13s          -          -       8.8s
  256      3.56s      2.22s          -          -     15.03s
  384      6.95s      3.71s          -          -     32.23s
  512     13.15s      7.14s          -          -     55.69s
  640     19.35s      9.65s          -          -     1:25.5
  768     28.88s     14.35s          -          -     2:01.3
  896     38.81s     18.59s          -          -     2:43.5
 1024     54.31s        27s          -          -     3:31.5
```

## Hermitian matrix eigenvalue decomposition

Computing the EVD of a hermitian matrix with shape `(n, n)`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4     10.3µs       10µs          -          -      8.9µs
    8     39.8µs       43µs          -          -     49.9µs
   16    178.3µs      178µs          -          -    298.5µs
   32    813.1µs    813.2µs          -          -      1.9ms
   64      5.7ms      6.8ms          -          -       14ms
   96     15.2ms     14.6ms          -          -     44.8ms
  128     29.5ms       28ms          -          -    103.1ms
  192     80.5ms     66.1ms          -          -    340.2ms
  256    166.4ms    128.5ms          -          -    789.5ms
  384    484.4ms    303.1ms          -          -      2.63s
  512      1.07s    607.1ms          -          -      6.13s
  640      1.83s    903.6ms          -          -     11.93s
  768      3.04s      1.42s          -          -     20.67s
  896      4.69s      2.12s          -          -      32.6s
 1024      6.91s      2.91s          -          -     48.33s
```

## Non Hermitian matrix eigenvalue decomposition

Computing the EVD of a matrix with shape `(n, n)`.

```
    n       faer  faer(par)    ndarray   nalgebra      eigen
    4     32.6µs     32.8µs          -          -     34.3µs
    8    169.2µs    223.1µs          -          -    209.7µs
   16    893.4µs    923.5µs          -          -      1.4ms
   32      4.8ms        5ms          -          -     10.3ms
   64     30.7ms     33.9ms          -          -     72.6ms
   96    160.5ms    205.4ms          -          -    245.8ms
  128      304ms    358.9ms          -          -    570.2ms
  192    768.2ms    671.8ms          -          -      1.83s
  256      1.47s      1.22s          -          -      4.34s
  384      3.91s      3.09s          -          -     14.47s
  512      8.08s      6.21s          -          -     33.86s
  640      19.7s     16.15s          -          -     1:06.7
  768     31.82s     24.19s          -          -     1:56.2
  896      47.2s     34.63s          -          -     3:05.2
 1024     1:11.4     49.51s          -          -     4:42.2
```
